# Import necessary libraries
import numpy as np
import pandas as pd
from sklearn.datasets import load_boston
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Load the dataset
boston = load_boston()
X = pd.DataFrame(boston.data, columns=boston.feature_names)
y = pd.Series(boston.target)

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Multiple Linear Regression Model
multi_lr_model = LinearRegression()
multi_lr_model.fit(X_train, y_train)
y_pred_multi = multi_lr_model.predict(X_test)
mse_multi = mean_squared_error(y_test, y_pred_multi)
r2_multi = r2_score(y_test, y_pred_multi)

# Single Feature Linear Regression Model (example feature: 'RM' - average number of rooms per dwelling)
single_feature = 'RM'
X_single = X[[single_feature]]
X_train_single, X_test_single, y_train_single, y_test_single = train_test_split(X_single, y, test_size=0.2, random_state=42)

single_lr_model = LinearRegression()
single_lr_model.fit(X_train_single, y_train_single)
y_pred_single = single_lr_model.predict(X_test_single)
mse_single = mean_squared_error(y_test_single, y_pred_single)
r2_single = r2_score(y_test_single, y_pred_single)

# Print results
print("Multiple Linear Regression Model:")
print("Mean Squared Error:", mse_multi)
print("R-squared:", r2_multi)

print("\nSingle Feature Linear Regression Model (using 'RM'):")
print("Mean Squared Error:", mse_single)
print("R-squared:", r2_single)
